# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13E8ej9NB2oCSuYOR9AZERsNXWJ-8EDnj
"""

Auther: Vrunda Fatangade
Data science and Analytics task 1

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
# %matplotlib inline

url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
data=pd.read_csv(url)

data.head()

data.plot(x='Hours',y='Scores',style='.',color='red',markersize=7)
plt.title('HOours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.grid()
plt.show()

X = data.iloc[:, :-1].values
Y = data.iloc[:,1].values

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=0.2, random_state=0)

from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(x_train,y_train)

line = model.coef_*X + model.intercept_

plt.scatter(x_train,y_train,color ='red')
plt.plot(X,line,color='green');
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.grid()
plt.show()

plt.scatter(x_test,y_test,color='blue')
plt.plot(X,line,color='green');
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.grid()
plt.show()

y_predicted = model.predict(x_test)

df = pd.DataFrame({'Actual Score ':y_test,'Predicted Score':y_predicted})
df

hours=9.25
own_pred = model.predict([[hours]])
print("The predicted score if a person studies for ",hours,"hours is ",own_pred[0])

from sklearn import metrics

print('mean absolute error:',metrics.mean_absolute_error(y_test,y_predicted))